name: Create issue
description: |
  A composite action for creating a github issue.
  This requires `issues: write` permissions in order to work correctly.

inputs:
  title:
    required: true
    description: "The title to use for the issue"
  body:
    required: false
    default: ""
    description: "The body text of the github issue"
  labels:
    required: false
    default: ""
    description: "A list of labels to add, separated by newlines."
  assignees:
    required: false
    default: ""
    description: "A list of assignees to add, separated by newlines."
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.
outputs:
  issue-number:
    value: ${{ steps.create.outputs.issue-number }}
    description: "The number of the created issue"
  issue-url:
    value: ${{ steps.create.outputs.issue-url }}
    description: "The HTTP URL of the newly created issue"

runs:
  using: "composite"
  steps:
    - name: Create issue
      id: create
      uses: actions/github-script@v7
      env:
        TITLE: ${{ inputs.title }}
        BODY: ${{ inputs.body }}
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          const { data: issue } = await github.rest.issues.create({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            labels: `${{ inputs.labels }}`.split(/[\n,]/).map(s => s.trim()).filter(s => s),
            assignees: `${{ inputs.assignees }}`.split(/[\n,]/).map(s => s.trim()).filter(s => s),
            title: process.env.TITLE,
            body: process.env.BODY,
          })
          core.setOutput('issue-number', issue.number)
          core.setOutput('issue-url', issue.html_url)
