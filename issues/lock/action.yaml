name: Lock issue
description: |
  A composite action for locking github issues.
  This requires `issues: write` permissions in order to work correctly.

inputs:
  issue-number:
    required: false
    default: "0"
    description: "The issue number to comment on"
  lock-reason:
    required: false
    default: "resolved"
    description: |
      The reason the issue is being locked.
      Must be one of: "off-topic", "too heated", "resolved", "spam"
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.

runs:
  using: "composite"
  steps:
    - name: Lock Issue
      id: update
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          await github.rest.issues.lock({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            issue_number: ${{ inputs.issue-number }} || context.issue.number,
            lock_reason: `${{ inputs.lock-reason }}`
          });
