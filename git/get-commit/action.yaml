name: Get commit
description: |
  A composite action for getting a commit.
  This requires `contents: write` permissions in order to work correctly.

inputs:
  commit-sha:
    required: false
    default: ""
    description: |
      The Git commit SHA to retrieve.
      If unspecified, this will default to the commit in the current context.
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.
outputs:
  message:
    value: ${{ steps.commit.outputs.message }}
    description: The commit message
  author-name:
    value: ${{ steps.commit.outputs.author-name }}
    description: The name of the author of the commit
  author-email:
    value: ${{ steps.commit.outputs.author-email }}
    description: The email of the author of the commit
  committer-name:
    value: ${{ steps.commit.outputs.committer-name }}
    description: The name of the committer
  committer-email:
    value: ${{ steps.commit.outputs.committer-email }}
    description: The email of the committer
  url:
    value: ${{ steps.commit.outputs.url }}
    description: The browser URL to the commit in Github
  api-url:
    value: ${{ steps.commit.outputs.api-url }}
    description: The the API URL to the commit
  sha:
    value: ${{ steps.commit.outputs.sha }}
    description: The SHA of the commit
  parents:
    value: ${{ steps.commit.outputs.parents }}
    description: The parent(s) of this commit, as an array
  verified:
    value: ${{ steps.commit.outputs.verified }}
    description: Whether the commit was verified.
  verification-reason:
    value: ${{ steps.commit.outputs.verification-reason }}
    description: The verification status.

runs:
  using: "composite"
  steps:
    - name: Get commit
      id: commit
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          const { data: commit } = await github.rest.git.getCommit({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            commit_sha: '${{ inputs.commit-sha }}' || context.sha
          });

          core.setOutput('message', commit.message)
          core.setOutput('author-name', commit?.author?.name)
          core.setOutput('author-email', commit?.author?.email)
          core.setOutput('committer-name', commit?.committer?.name)
          core.setOutput('committer-email', commit?.committer?.email)
          core.setOutput('url', commit?.html_url)
          core.setOutput('api-url', commit?.url)
          core.setOutput('sha', commit?.sha)
          core.setOutput('parents', commit?.parents.map(v => v?.sha))
          core.setOutput('verified', commit?.verification?.verified)
          core.setOutput('verification-reason', commit?.verification?.reason)
