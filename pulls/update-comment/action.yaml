name: Update comment on Pull Request
description: |
  A composite action for adding labels to github issues.
  This requires `issues: write` permissions in order to work correctly.

inputs:
  comment-id:
    required: true
    description: "The ID of the comment to update"
  body:
    required: true
    description: "The body of the comment to update the message to"
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.
outputs:
  comment-id:
    value: ${{ steps.update.outputs.comment-id }}
    description: The ID of the updated comment
  comment-url:
    value: ${{ steps.update.outputs.comment-url }}
    description: The URL of the comment that is updated
  user-login:
    value: ${{ steps.update.outputs.user-login }}
    description: The user-login who made the comment
  body:
    value: ${{ steps.update.outputs.body }}
    description: The body of the comment
  time-since-create:
    value: ${{ steps.update.outputs.time-since-create }}
    description: The amount of time since the pull request was created
  time-since-last-update:
    value: ${{ steps.update.outputs.time-since-last-update }}
    description: The amount of time since the pull request was last updated

runs:
  using: "composite"
  steps:
    - name: Update Comment
      id: update
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          const { data: comment } = await github.rest.issues.updateComment({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            comment_id: ${{ inputs.comment-id }},
            body: `${{ inputs.body }}`
          });
          core.setOutput('comment-id', comment.id)
          core.setOutput('comment-url', comment.html_url)
          var timeFromNow = function(date) {
            const diff = Date.now() - date
            return {
              milliseconds : Math.floor(diff           ),
              seconds      : Math.floor(diff /     1000),
              minutes      : Math.floor(diff /    60000),
              hours        : Math.floor(diff /  3600000),
              days         : Math.floor(diff / 86400000)
            }
          }
          core.setOutput('user-login', timeFromNow(Date.parse(comment?.user?.login)))
          core.setOutput('body', timeFromNow(Date.parse(comment?.body)))
          core.setOutput('time-since-create', timeFromNow(Date.parse(comment?.created_at)))
          core.setOutput('time-since-last-update', timeFromNow(Date.parse(comment?.updated_at)))
