name: Create comment on Pull Request
description: |
  A composite action that creates a comment on a pull-request.
  Requires the `pull-requests: write` permission to work.

inputs:
  body:
    required: true
    description: "The message to comment"
  pull-number:
    required: false
    default: "0"
    description: "The pull-request number to comment on."
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.
outputs:
  comment-id:
    value: ${{ steps.create-comment.outputs.comment-id }}
    description: "The ID of the created comment"
  comment-url:
    value: ${{ steps.create-comment.outputs.comment-url }}
    description: "A browser URL to the created comment"
  comment-api-url:
    value: ${{ steps.create-comment.outputs.comment-api-url }}
    description: "An API URL to the created comment"

runs:
  using: "composite"
  steps:
    - name: Leave Issue or Pull Request comment
      id: create-comment
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          const { data: comment } = await github.rest.issues.createComment({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            issue_number: ${{ inputs.pull-number }} || context.issue.number,
            body: `${{ inputs.body }}`
          })
          core.setOutput('comment-id', comment.id)
          core.setOutput('comment-url', comment.html_url)
          core.setOutput('comment-api-url', comment.url)
