name: Get a release
description: |
  Get a created release
  Requires the `content: write` permission to work.

inputs:
  release-id:
    required: true
    description: "The ID of the release"
  owner:
    required: false
    default: ""
    description: |
      The repository owner.
      If unspecified, this will default to the owner of the current repository.
  repo:
    required: false
    default: ""
    description: |
      The name of the repository.
      If unspecified, this will default to the current repository.
  github-token:
    required: false
    default: "${{ github.token }}"
    description: |
      The default token to use for this Git operation.
      If unspecified, this will default to `github.token`.
  retries:
    required: false
    default: "0"
    description: |
      The number of times to attempt to retry if this fails.
  retry-exempt-status-codes:
    required: false
    default: "400,401,403,404,422"
    description: |
      A list of error-codes that are exempt from being retried.
outputs:
  release-id:
    value: ${{ inputs.release-id }}
    description: The ID of the release
  url:
    value: ${{ steps.get-release.outputs.url }}
    description: A browser-friendly URL to the release page
  api-url:
    value: ${{ steps.get-release.outputs.api-url }}
    description: The API URL for the release
  tag-name:
    value: ${{ steps.get-release.outputs.tag-name }}
    description: The name of the git tag associated to this release
  name:
    value: ${{ steps.get-release.outputs.name }}
    description: The name/title of the release
  body:
    value: ${{ steps.get-release.outputs.body }}
    description: The body of the release
  draft:
    value: ${{ steps.get-release.outputs.draft }}
    description: Whether this release is a draft release
  prerelease:
    value: ${{ steps.get-release.outputs.prerelease }}
    description: Whether this release is a pre-release
  target-commitish:
    value: ${{ steps.get-release.outputs.target-commitish }}
    description: The commit that this release tracks

runs:
  using: "composite"
  steps:
    - name: Upload asset
      id: get-release
      uses: actions/github-script@v7
      with:
        retries: ${{ inputs.retries }}
        retry-exempt-status-codes: ${{ inputs.retry-exempt-status-codes }}
        github-token: ${{ inputs.github-token }}
        script: |
          const { data: release } = await github.rest.repos.getRelease({
            owner: `${{ inputs.owner }}` || context.repo.owner,
            repo: `${{ inputs.repo }}` || context.repo.repo,
            release_id: `${{ inputs.release-id }}`,
          });

          core.setOutput('url', release?.html_url)
          core.setOutput('api-url', release?.url)
          core.setOutput('tag-name', release?.tag_name)
          core.setOutput('name', release?.name)
          core.setOutput('body', release?.body)
          core.setOutput('draft', release?.draft)
          core.setOutput('prerelease', release?.prerelease)
          core.setOutput('target-commitish', release?.target_commitish)
