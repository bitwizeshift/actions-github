name: Test Pull Request API
on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
        description: The name of the branch
    outputs:
      pull-number:
        value: ${{ jobs.create.outputs.pull-number }}
        description: The created pull-request number

jobs:
  create:
    name: Create
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      contents: write
    outputs:
      pull-number: ${{ steps.create.outputs.pull-number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Pull Request
        id: create
        uses: ./pulls/create
        with:
          head: ${{ inputs.branch }}
          base: master
          title: "Integration Test ${{ github.run_id }}"
          body: |
            This is a test Github Issue initiated by [this workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            Please ignore this

  test-labels:
    name: Labels
    runs-on: ubuntu-latest
    needs: [create]
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write
      issues: write
      contents: write
    env:
      LABEL: integration-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get PR Before
        id: before
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert label is empty before action
        if: success() && contains(steps.before.outputs.labels, env.LABEL)
        run: |
          echo "::error::PR labels before was '${{ steps.before.outputs.labels }}'; expected empty"
          exit 1

      - name: Add label
        uses: ./pulls/add-labels
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
          labels: |
            ${{ env.LABEL }}

      - name: Get PR during
        id: during
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert labels is added after action
        if: success() && !contains(steps.during.outputs.labels, env.LABEL)
        run: |
          echo "::error::PR Labels is '${{ steps.before.outputs.labels }}'; does not contain ${{ env.LABEL }}"
          exit 1


      - name: Remove Label
        uses: ./pulls/remove-labels
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
          labels: |
            ${{ env.LABEL }}

      - name: Get PR after
        id: after
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert assignee is removed after action
        if: success() && contains(steps.after.outputs.labels, env.LABEL)
        run: |
          echo "::error::PR Labels after is '${{ steps.after.outputs.labels }}'; expected empty"
          exit 1


  test-assignees:
    name: Assignees
    runs-on: ubuntu-latest
    needs: [create]
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write
      issues: write
      contents: write
    env:
      ASSIGNEE: bitwizeshift
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get PR Before
        id: before
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert assignee is empty before action
        if: success() && contains(steps.before.outputs.assignees, env.ASSIGNEE)
        run: |
          echo "::error::PR Assignees before was '${{ steps.before.outputs.assignees }}'; expected empty"
          exit 1

      - name: Add assignees
        uses: ./pulls/add-assignees
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
          assignees: |
            ${{ env.ASSIGNEE }}

      - name: Get PR during
        id: during
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert assignee is added after action
        if: success() && !contains(steps.during.outputs.assignees, env.ASSIGNEE)
        run: |
          echo "::error::PR Assignees is '${{ steps.before.outputs.assignees }}'; does not contain ${{ env.ASSIGNEE }}"
          exit 1

      - name: Remove Assignees
        uses: ./pulls/remove-assignees
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
          assignees: |
            ${{ env.ASSIGNEE }}

      - name: Get PR after
        id: after
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert assignee is removed after action
        if: success() && contains(steps.after.outputs.assignees, env.ASSIGNEE)
        run: |
          echo "::error::PR Assignees after is '${{ steps.after.outputs.assignees }}'; expected empty"
          exit 1

  test-open-close:
    name: Open/Close
    runs-on: ubuntu-latest
    needs: [create]
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write
      issues: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get PR Before
        id: before
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert Pull Request begins in open state
        if: success() && steps.before.outputs.state != 'open'
        run: |
          echo "::error::PR State before was not 'opened'. Got '${{ steps.before.outputs.state }}'"
          exit 1

      - name: Close PR
        uses: ./pulls/close
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Get PR during
        id: during
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert Pull Request is closed by action
        if: success() && steps.during.outputs.state != 'closed'
        run: |
          echo "::error::PR State during was not 'closed'. Got '${{ steps.during.outputs.state }}'"
          exit 1

      - name: Reopen PR
        uses: ./pulls/open
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Get PR after
        id: after
        uses: ./pulls/get
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}

      - name: Assert Pull Request is reopened by action
        if: success() && steps.after.outputs.state != 'open'
        run: |
          echo "::error::PR State after was not 'open'. Got '${{ steps.after.outputs.state }}'"
          exit 1

  test-comment:
    name: Comment
    runs-on: ubuntu-latest
    needs: [create]
    defaults:
      run:
        shell: bash
    permissions:
      pull-requests: write
      issues: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create comment
        id: create-comment
        uses: ./pulls/create-comment
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
          body: |
            Testing creating an automated comment on the issue
      - name: Update comment
        uses: ./pulls/update-comment
        with:
          comment-id: ${{ steps.create-comment.outputs.comment-id }}
          body: |
            Testing creating an automated comment on the issue

            This comment's url: ${{ steps.create-comment.outputs.comment-url }}

  on-success:
    name: Report Success
    runs-on: ubuntu-latest
    if: success()
    needs:
      - create
      - test-assignees
      - test-comment
      - test-labels
      - test-open-close
    steps:
      - name: Report Success
        run: |
          echo "::info::Pull request tests passed successfully"

  on-failure:
    name: Cleanup Failed State
    runs-on: ubuntu-latest
    if: failure()
    needs:
      - create
      - test-assignees
      - test-comment
      - test-labels
      - test-open-close
    permissions:
      pull-requests: write
      issues: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Close Pull Request
        continue-on-error: true
        uses: ./pulls/close
        with:
          pull-number: ${{ needs.create.outputs.pull-number }}
